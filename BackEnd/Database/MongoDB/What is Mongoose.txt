What is Mongoose?
------------------
- Mongoose is an Object Data Modeling (ODM) library for MongoDB, designed to work in a Node.js environment.
- It provides a structured way to interact with MongoDB by allowing you to define schemas and models for your data. 
- Essentially, Mongoose brings a layer of abstraction that makes working with MongoDB more organized, providing tools like data validation, relationship management, and query building.

Relationship Between Mongoose and MongoDB:
-----------------------------------------
- MongoDB is a NoSQL, document-oriented database that stores data in a flexible, JSON-like format (BSON). 
- MongoDB is schema-less, meaning that each document in a collection can have a different structure.

- Mongoose is a tool that sits on top of MongoDB to provide more structure. It allows you to define schemas for your data, apply validation rules,and easily manage relationships between documents.
- While MongoDB offers flexibility, Mongoose provides more control and a structured approach, making it easier to work with MongoDB in Node.js applications.

Why Use Mongoose with MongoDB?
-----------------------------
1. Schema Definition:
    - While MongoDB allows you to insert documents with varying structures, Mongoose enables you to define a schema for your collections. This ensures that all documents in a collection follow the same structure.
2. Validation:
    - MongoDB doesn’t enforce data validation by default. Mongoose provides built-in validation so that you can enforce data integrity. 
3. Models for MongoDB Collections:
    - In MongoDB, a collection is a group of documents.
    - In Mongoose, collections are represented as models.
    - A model is an interface that provides access to MongoDB collections. Once you've defined a schema, you create a model based on it.\
4. Connection Management:
    - Mongoose handles the connection to MongoDB for you. It allows you to easily connect to a MongoDB instance and manages the connection, including automatically reconnecting if the connection is dropped.

5. Relationship Management (Population):
    - MongoDB doesn’t provide built-in support for joins like in SQL databases. Mongoose offers population, which allows you to link documents between collections, making it easier to reference and retrieve related data.
    